{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet AuthManagerService = class AuthManagerService {\n  constructor(auth, router, rou) {\n    this.auth = auth;\n    this.router = router;\n    this.rou = rou;\n  }\n  canActivate(route, state) {\n    if (this.auth.isLoggedIn() && this.auth.getEmployeeRole() === 'manager') {\n      return true;\n    }\n    this.router.navigate(['']);\n    return false;\n  }\n};\nAuthManagerService = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthManagerService);\nexport { AuthManagerService };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AASnC,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAE7BC,YAAoBC,IAAuB,EAASC,MAAa,EAASC,GAAG;IAAzD,SAAI,GAAJF,IAAI;IAA4B,WAAM,GAANC,MAAM;IAAgB,QAAG,GAAHC,GAAG;EAAI;EACjFC,WAAW,CAACC,KAA6B,EAAEC,KAA0B;IACnE,IAAG,IAAI,CAACL,IAAI,CAACM,UAAU,EAAE,IAAE,IAAI,CAACN,IAAI,CAACO,eAAe,EAAE,KAAG,SAAS,EAAC;MACjE,OAAO,IAAI;;IAEb,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC1B,OAAO,KAAK;EACd;CACD;AAVYV,kBAAkB,eAH9BD,UAAU,CAAC;EACVY,UAAU,EAAE;CACb,CAAC,GACWX,kBAAkB,CAU9B;SAVYA,kBAAkB","names":["Injectable","AuthManagerService","constructor","auth","router","rou","canActivate","route","state","isLoggedIn","getEmployeeRole","navigate","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Gowlikar.Abhishek\\Documents\\Projects\\TaskManger\\taskmanagerapp-angular\\taskmanagerapp-angular\\src\\app\\auth-manager.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { JwtClientService } from './jwt-client.service';\nimport { AuthserviceService } from './authservice.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthManagerService implements CanActivate{\n\n  constructor(private auth:AuthserviceService,private router:Router,private rou) { }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    if(this.auth.isLoggedIn()&&this.auth.getEmployeeRole()==='manager'){\n      return true;\n    }\n    this.router.navigate(['']);\n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}