{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./authservice.service\";\nexport class JwtClientService {\n  constructor(http, auth) {\n    this.http = http;\n    this.auth = auth;\n    this.editTaskSource = new Subject();\n    this.editTask$ = this.editTaskSource.asObservable();\n  }\n  sendTask(message) {\n    console.log(\"message \", message);\n    this.editTaskSource.next(message);\n  }\n  generateToken(request) {\n    console.log(\"from jwt\", request);\n    return this.http.post(\"http://localhost:8081/user/login\", request, {\n      responseType: 'text'\n    });\n  }\n  welcome() {\n    const token = this.auth.getToken();\n    let tokenStr = 'Bearer ' + token;\n    console.log(tokenStr);\n    //const headers=new HttpHeaders().set(\"Authorization\",tokenStr)\n    return this.http.get(\"http://localhost:8081/user/home\", {\n      headers: new HttpHeaders().set(\"Authorization\", tokenStr)\n    });\n  }\n  getAllTask() {\n    const token = this.auth.getToken();\n    let tokenStr = 'Bearer ' + token;\n    const currentUser = this.auth.extractPayloadFromToken(token);\n    const headers = new HttpHeaders().set(\"Authorization\", tokenStr);\n    console.log('header ', token);\n    return this.http.get(\"http://localhost:8081/user/\" + currentUser + \"/getAllTasks\", {\n      headers: headers\n    });\n    // return this.http.get(\"http://localhost:8081/user/\"+currentUser+\"/getAllTasks\");\n  }\n}\n\nJwtClientService.ɵfac = function JwtClientService_Factory(t) {\n  return new (t || JwtClientService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthserviceService));\n};\nJwtClientService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: JwtClientService,\n  factory: JwtClientService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAASC,OAAO,QAAQ,MAAM;;;;AAK9B,OAAM,MAAOC,gBAAgB;EAK3BC,YAAoBC,IAAe,EAAUC,IAAwB;IAAjD,SAAI,GAAJD,IAAI;IAAqB,SAAI,GAAJC,IAAI;IAHzC,mBAAc,GAAC,IAAIJ,OAAO,EAAU;IAC5C,cAAS,GAAC,IAAI,CAACK,cAAc,CAACC,YAAY,EAAE;EAE6B;EAEzEC,QAAQ,CAACC,OAAc;IACrBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAACF,OAAO,CAAC;IAC/B,IAAI,CAACH,cAAc,CAACM,IAAI,CAACH,OAAO,CAAC;EACnC;EAGOI,aAAa,CAACC,OAAW;IAC9BJ,OAAO,CAACC,GAAG,CAAC,UAAU,EAACG,OAAO,CAAC;IAC/B,OAAQ,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,kCAAkC,EAACD,OAAO,EAAC;MAACE,YAAY,EAAC;IAAgB,CAAC,CAAC;EAEpG;EAEOC,OAAO;IACZ,MAAMC,KAAK,GAAG,IAAI,CAACb,IAAI,CAACc,QAAQ,EAAE;IAElC,IAAIC,QAAQ,GAAC,SAAS,GAACF,KAAK;IAC5BR,OAAO,CAACC,GAAG,CAACS,QAAQ,CAAC;IAGrB;IAEA,OAAO,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAC,iCAAiC,EAAC;MACrDC,OAAO,EAAE,IAAItB,WAAW,EAAE,CAACuB,GAAG,CAAC,eAAe,EAACH,QAAQ;KACxD,CAAC;EACJ;EAGOI,UAAU;IACf,MAAMN,KAAK,GAAK,IAAI,CAACb,IAAI,CAACc,QAAQ,EAAE;IACpC,IAAIC,QAAQ,GAAC,SAAS,GAACF,KAAK;IAC5B,MAAMO,WAAW,GAAC,IAAI,CAACpB,IAAI,CAACqB,uBAAuB,CAACR,KAAK,CAAC;IAC1D,MAAMI,OAAO,GAAC,IAAItB,WAAW,EAAE,CAACuB,GAAG,CAAC,eAAe,EAACH,QAAQ,CAAC;IAC7DV,OAAO,CAACC,GAAG,CAAC,SAAS,EAACO,KAAK,CAAC;IAC5B,OAAO,IAAI,CAACd,IAAI,CAACiB,GAAG,CAAC,6BAA6B,GAACI,WAAW,GAAC,cAAc,EAAC;MAC5EH,OAAO,EAACA;KAAQ,CAAC;IACnB;EACF;;;AA3CWpB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAyB,SAAhBzB,gBAAgB;EAAA0B,YAFf;AAAM","names":["HttpHeaders","Subject","JwtClientService","constructor","http","auth","editTaskSource","asObservable","sendTask","message","console","log","next","generateToken","request","post","responseType","welcome","token","getToken","tokenStr","get","headers","set","getAllTask","currentUser","extractPayloadFromToken","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Gowlikar.Abhishek\\Documents\\Projects\\TaskManger\\taskmanagerapp-angular\\taskmanagerapp-angular\\src\\app\\jwt-client.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthserviceService } from './authservice.service';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtClientService {\n\n  private editTaskSource=new Subject<Object>();\n  editTask$=this.editTaskSource.asObservable();\n   \n  constructor(private http:HttpClient ,private auth :AuthserviceService) { }\n\n  sendTask(message:string){\n    console.log(\"message \",message)\n    this.editTaskSource.next(message);\n  }\n\n\n  public generateToken(request:any){\n    console.log(\"from jwt\",request)\n    return  this.http.post(\"http://localhost:8081/user/login\",request,{responseType:'text' as 'json'});\n  \n  }\n\n  public welcome(){\n    const token = this.auth.getToken();\n    \n    let tokenStr='Bearer '+token;\n    console.log(tokenStr)\n\n    \n    //const headers=new HttpHeaders().set(\"Authorization\",tokenStr)\n    \n    return this.http.get(\"http://localhost:8081/user/home\",{\n      headers: new HttpHeaders().set(\"Authorization\",tokenStr)\n    });\n  }\n\n\n  public getAllTask(){\n    const token:any=this.auth.getToken();\n    let tokenStr='Bearer '+token;\n    const currentUser=this.auth.extractPayloadFromToken(token);\n    const headers=new HttpHeaders().set(\"Authorization\",tokenStr);\n    console.log('header ',token)\n    return this.http.get(\"http://localhost:8081/user/\"+currentUser+\"/getAllTasks\",{\n      headers:headers});\n    // return this.http.get(\"http://localhost:8081/user/\"+currentUser+\"/getAllTasks\");\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}