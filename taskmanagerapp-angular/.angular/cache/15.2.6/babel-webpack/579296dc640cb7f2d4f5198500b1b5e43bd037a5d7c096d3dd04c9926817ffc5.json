{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./authservice.service\";\nexport class JwtClientService {\n  constructor(http, auth) {\n    this.http = http;\n    this.auth = auth;\n  }\n  generateToken(request) {\n    console.log(\"from jwt\", request);\n    return this.http.post(\"http://localhost:8081/user/login\", request, {\n      responseType: 'text'\n    });\n  }\n  welcome() {\n    const token = this.auth.getToken();\n    let tokenStr = 'Bearer ' + token;\n    console.log(tokenStr);\n    //const headers=new HttpHeaders().set(\"Authorization\",tokenStr)\n    return this.http.get(\"http://localhost:8081/user/home\", {\n      headers: new HttpHeaders().set(\"Authorization\", tokenStr)\n    });\n  }\n  getAllEmployees() {\n    const token = this.auth.getToken();\n    let tokenStr = 'Bearer ' + token;\n    this.auth.extractPayloadFromToken(token);\n    return this.http.get(\"http://localhost:8081/user/nikhil@gmail.com/getAllTasks\", {\n      headers: new HttpHeaders().set(\"Authorization\", tokenStr)\n    });\n  }\n}\nJwtClientService.ɵfac = function JwtClientService_Factory(t) {\n  return new (t || JwtClientService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthserviceService));\n};\nJwtClientService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: JwtClientService,\n  factory: JwtClientService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAO9D,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,IAAe,EAAUC,IAAwB;IAAjD,SAAI,GAAJD,IAAI;IAAqB,SAAI,GAAJC,IAAI;EAAwB;EAElEC,aAAa,CAACC,OAAW;IAC9BC,OAAO,CAACC,GAAG,CAAC,UAAU,EAACF,OAAO,CAAC;IAC/B,OAAQ,IAAI,CAACH,IAAI,CAACM,IAAI,CAAC,kCAAkC,EAACH,OAAO,EAAC;MAACI,YAAY,EAAC;IAAgB,CAAC,CAAC;EAEpG;EAEOC,OAAO;IACZ,MAAMC,KAAK,GAAG,IAAI,CAACR,IAAI,CAACS,QAAQ,EAAE;IAElC,IAAIC,QAAQ,GAAC,SAAS,GAACF,KAAK;IAC5BL,OAAO,CAACC,GAAG,CAACM,QAAQ,CAAC;IAGrB;IAEA,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAC,iCAAiC,EAAC;MACrDC,OAAO,EAAE,IAAIhB,WAAW,EAAE,CAACiB,GAAG,CAAC,eAAe,EAACH,QAAQ;KACxD,CAAC;EACJ;EAGOI,eAAe;IACpB,MAAMN,KAAK,GAAK,IAAI,CAACR,IAAI,CAACS,QAAQ,EAAE;IACpC,IAAIC,QAAQ,GAAC,SAAS,GAACF,KAAK;IAC5B,IAAI,CAACR,IAAI,CAACe,uBAAuB,CAACP,KAAK,CAAC;IACxC,OAAO,IAAI,CAACT,IAAI,CAACY,GAAG,CAAC,yDAAyD,EAAC;MAC7EC,OAAO,EAAC,IAAIhB,WAAW,EAAE,CAACiB,GAAG,CAAC,eAAe,EAACH,QAAQ;KACvD,CAAC;EACJ;;AAjCWb,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAmB,SAAhBnB,gBAAgB;EAAAoB,YAFf;AAAM","names":["HttpHeaders","JwtClientService","constructor","http","auth","generateToken","request","console","log","post","responseType","welcome","token","getToken","tokenStr","get","headers","set","getAllEmployees","extractPayloadFromToken","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Gowlikar.Abhishek\\Documents\\Projects\\TaskManger\\taskmanagerapp-angular\\taskmanagerapp-angular\\src\\app\\jwt-client.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthserviceService } from './authservice.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtClientService {\n\n   \n  constructor(private http:HttpClient ,private auth :AuthserviceService) { }\n\n  public generateToken(request:any){\n    console.log(\"from jwt\",request)\n    return  this.http.post(\"http://localhost:8081/user/login\",request,{responseType:'text' as 'json'});\n  \n  }\n\n  public welcome(){\n    const token = this.auth.getToken();\n    \n    let tokenStr='Bearer '+token;\n    console.log(tokenStr)\n\n    \n    //const headers=new HttpHeaders().set(\"Authorization\",tokenStr)\n    \n    return this.http.get(\"http://localhost:8081/user/home\",{\n      headers: new HttpHeaders().set(\"Authorization\",tokenStr)\n    });\n  }\n\n\n  public getAllEmployees(){\n    const token:any=this.auth.getToken();\n    let tokenStr='Bearer '+token;\n    this.auth.extractPayloadFromToken(token);\n    return this.http.get(\"http://localhost:8081/user/nikhil@gmail.com/getAllTasks\",{\n      headers:new HttpHeaders().set(\"Authorization\",tokenStr)\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}