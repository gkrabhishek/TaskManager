{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthserviceService {\n  constructor() {\n    this.TOKEN_KEY = 'my_app_token';\n  }\n  setToken(token) {\n    localStorage.setItem(this.TOKEN_KEY, token);\n  }\n  getToken() {\n    return localStorage.getItem(this.TOKEN_KEY);\n  }\n  removeToken() {\n    localStorage.removeItem(this.TOKEN_KEY);\n  }\n  isLoggedIn() {\n    return this.getToken() !== null;\n  }\n}\nAuthserviceService.ɵfac = function AuthserviceService_Factory(t) {\n  return new (t || AuthserviceService)();\n};\nAuthserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthserviceService,\n  factory: AuthserviceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,kBAAkB;EAE7BC;IACQ,cAAS,GAAG,cAAc;EADlB;EAGhBC,QAAQ,CAACC,KAAa;IACpBC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACC,SAAS,EAAEH,KAAK,CAAC;EAC7C;EAEAI,QAAQ;IACN,OAAOH,YAAY,CAACI,OAAO,CAAC,IAAI,CAACF,SAAS,CAAC;EAC7C;EAEAG,WAAW;IACTL,YAAY,CAACM,UAAU,CAAC,IAAI,CAACJ,SAAS,CAAC;EACzC;EAEAK,UAAU;IACR,OAAO,IAAI,CAACJ,QAAQ,EAAE,KAAK,IAAI;EACjC;;AAnBWP,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAY,SAAlBZ,kBAAkB;EAAAa,YAFjB;AAAM","names":["AuthserviceService","constructor","setToken","token","localStorage","setItem","TOKEN_KEY","getToken","getItem","removeToken","removeItem","isLoggedIn","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Gowlikar.Abhishek\\Documents\\Projects\\TaskManger\\taskmanagerapp-angular\\taskmanagerapp-angular\\src\\app\\authservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthserviceService {\n\n  constructor() { }\n  private TOKEN_KEY = 'my_app_token';\n\n  setToken(token: string) {\n    localStorage.setItem(this.TOKEN_KEY, token);\n  }\n\n  getToken(): string | null {\n    return localStorage.getItem(this.TOKEN_KEY);\n  }\n\n  removeToken() {\n    localStorage.removeItem(this.TOKEN_KEY);\n  }\n\n  isLoggedIn(): boolean {\n    return this.getToken() !== null;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}