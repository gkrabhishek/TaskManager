{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../jwt-client.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction SignupComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.message[\"message\"], \" \");\n  }\n}\nfunction SignupComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.message[\"message\"], \" \");\n  }\n}\nexport class SignupComponent {\n  constructor(service) {\n    this.service = service;\n    this.success = false;\n    this.error = false;\n  }\n  ngOnInit() {\n    this.success = false;\n    this.error = false;\n  }\n  onSubmit(data) {\n    this.success = false;\n    this.error = false;\n    console.log(data.value.newUser);\n    const resp = this.service.signup(data.value.newUser);\n    resp.subscribe(data => {\n      this.success = true;\n      this.message = JSON.parse(data);\n    }, error => {\n      this.error = true;\n      this.message = JSON.parse(error.error);\n    }, () => {\n      this.success = false;\n      this.error = false;\n      this.ngOnInit();\n    });\n  }\n}\nSignupComponent.ɵfac = function SignupComponent_Factory(t) {\n  return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.JwtClientService));\n};\nSignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignupComponent,\n  selectors: [[\"app-signup\"]],\n  decls: 40,\n  vars: 2,\n  consts: [[1, \"container\"], [2, \"text-align\", \"center\"], [\"ngNativeValidate\", \"\", 3, \"ngSubmit\"], [\"signupForm\", \"ngForm\"], [\"class\", \"alert alert-success\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"ngModelGroup\", \"newUser\"], [\"user\", \"ngModelGroup\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"placeholder\", \"Enter your name\", \"required\", \"\", \"ngModel\", \"\", \"name\", \"name\", \"aria-required\", \"true\", 1, \"form-control\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter your email\", \"required\", \"\", \"ngModel\", \"\", \"name\", \"email\", \"aria-required\", \"true\", 1, \"form-control\"], [\"for\", \"phone\"], [\"type\", \"tel\", \"id\", \"phone\", \"placeholder\", \"Enter your phone number\", \"required\", \"\", \"ngModel\", \"\", \"name\", \"contactNumber\", \"aria-required\", \"true\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter your password\", \"required\", \"\", \"ngModel\", \"\", \"name\", \"password\", \"aria-required\", \"true\", 1, \"form-control\"], [\"for\", \"role\"], [\"id\", \"role\", \"required\", \"\", \"ngModel\", \"\", \"name\", \"role\", \"aria-required\", \"true\", 1, \"form-control\"], [\"value\", \"\"], [\"value\", \"manager\"], [\"value\", \"user\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"mt-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"mt-3\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"]],\n  template: function SignupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Sign Up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"hr\");\n      i0.ɵɵelementStart(4, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_4_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵtemplate(6, SignupComponent_div_6_Template, 2, 1, \"div\", 4);\n      i0.ɵɵtemplate(7, SignupComponent_div_7_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementStart(8, \"div\", 6, 7)(10, \"div\", 8)(11, \"label\", 9);\n      i0.ɵɵtext(12, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 11);\n      i0.ɵɵtext(16, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 8)(19, \"label\", 13);\n      i0.ɵɵtext(20, \"Phone Number:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 8)(23, \"label\", 15);\n      i0.ɵɵtext(24, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 8)(27, \"label\", 17);\n      i0.ɵɵtext(28, \"Role:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"select\", 18)(30, \"option\", 19);\n      i0.ɵɵtext(31, \"Select your role\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"option\", 20);\n      i0.ɵɵtext(33, \"Manager\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"option\", 21);\n      i0.ɵɵtext(35, \"User\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(36, \"button\", 22);\n      i0.ɵɵtext(37, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"button\", 23);\n      i0.ɵɵtext(39, \"Cancel\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.success);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n    }\n  },\n  dependencies: [i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgModelGroup, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAKQA,+BAA8D;IAC1DA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,0DACF;;;;;IACAA,+BAA2D;IACzDA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,0DACF;;;ACFV,OAAM,MAAOC,eAAe;EAK1BC,YAAoBC,OAAwB;IAAxB,YAAO,GAAPA,OAAO;IAH3B,YAAO,GAAC,KAAK;IACb,UAAK,GAAC,KAAK;EAIX;EACAC,QAAQ;IACN,IAAI,CAACC,OAAO,GAAC,KAAK;IAClB,IAAI,CAACC,KAAK,GAAC,KAAK;EAClB;EAEAC,QAAQ,CAACC,IAAQ;IACf,IAAI,CAACH,OAAO,GAAC,KAAK;IAClB,IAAI,CAACC,KAAK,GAAC,KAAK;IACdG,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,KAAK,CAACC,OAAO,CAAC;IAC/B,MAAMC,IAAI,GAAC,IAAI,CAACV,OAAO,CAACW,MAAM,CAACN,IAAI,CAACG,KAAK,CAACC,OAAO,CAAC;IAClDC,IAAI,CAACE,SAAS,CAAEP,IAAQ,IAAG;MACzB,IAAI,CAACH,OAAO,GAAC,IAAI;MACjB,IAAI,CAACW,OAAO,GAACC,IAAI,CAACC,KAAK,CAACV,IAAI,CAAC;IAC/B,CAAC,EAAEF,KAAK,IAAG;MACT,IAAI,CAACA,KAAK,GAAC,IAAI;MACf,IAAI,CAACU,OAAO,GAACC,IAAI,CAACC,KAAK,CAACZ,KAAK,CAACA,KAAK,CAAC;IACtC,CAAC,EAAC,MAAI;MACJ,IAAI,CAACD,OAAO,GAAC,KAAK;MAClB,IAAI,CAACC,KAAK,GAAC,KAAK;MAChB,IAAI,CAACF,QAAQ,EAAE;IACjB,CAAC,CAAC;EACN;;AA7BWH,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDR5BvB,8BAAuB;MACaA,uBAAO;MAAAA,iBAAK;MAC5CA,qBAAI;MAEJA,kCAA8E;MAAnDA;QAAAA;QAAA;QAAA,OAAYA,gCAAoB;MAAA,EAAC;MACxDA,gEAEQ;MACNA,gEAEM;MACRA,iCAAiD;MAE3BA,sBAAK;MAAAA,iBAAQ;MAC/BA,6BAAkI;MACtIA,iBAAM;MACNA,+BAAwB;MACDA,uBAAM;MAAAA,iBAAQ;MACjCA,6BAAuI;MAC3IA,iBAAM;MACNA,+BAAwB;MACDA,8BAAa;MAAAA,iBAAQ;MACxCA,6BAAmJ;MACvJA,iBAAM;MACNA,+BAAwB;MACEA,0BAAS;MAAAA,iBAAQ;MACvCA,6BAAkJ;MACtJA,iBAAM;MACNA,+BAAwB;MACFA,sBAAK;MAAAA,iBAAQ;MAC/BA,mCAAyF;MACpEA,iCAAgB;MAAAA,iBAAS;MAC1CA,mCAAwB;MAAAA,wBAAO;MAAAA,iBAAS;MACxCA,mCAAqB;MAAAA,qBAAI;MAAAA,iBAAS;MAG1CA,mCAAmD;MAAAA,uBAAM;MAAAA,iBAAS;MAClEA,mCAAoD;MAAAA,uBAAM;MAAAA,iBAAS;;;MAhCjCA,eAAa;MAAbA,kCAAa;MAGZA,eAAW;MAAXA,gCAAW","names":["i0","SignupComponent","constructor","service","ngOnInit","success","error","onSubmit","data","console","log","value","newUser","resp","signup","subscribe","message","JSON","parse","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Gowlikar.Abhishek\\Documents\\Projects\\TaskManger\\taskmanagerapp-angular\\taskmanagerapp-angular\\src\\app\\signup\\signup.component.html","C:\\Users\\Gowlikar.Abhishek\\Documents\\Projects\\TaskManger\\taskmanagerapp-angular\\taskmanagerapp-angular\\src\\app\\signup\\signup.component.ts"],"sourcesContent":["<div class=\"container\">\n    <h1 style=\"text-align: center;\">Sign Up</h1>\n    <hr>\n    \n    <form #signupForm=\"ngForm\" (ngSubmit)=\"onSubmit(signupForm)\" ngNativeValidate>\n        <div class=\"alert alert-success\" *ngIf=\"success\" role=\"alert\">\n            {{message['message']}}\n          </div>\n          <div class=\"alert alert-danger\" *ngIf=\"error\" role=\"alert\">\n            {{message['message']}}\n          </div>\n        <div ngModelGroup=\"newUser\" #user=\"ngModelGroup\">\n        <div class=\"form-group\">\n            <label for=\"name\">Name:</label>\n            <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Enter your name\" required ngModel name=\"name\" aria-required=\"true\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"email\">Email:</label>\n            <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter your email\" required ngModel name=\"email\"  aria-required=\"true\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"phone\">Phone Number:</label>\n            <input type=\"tel\" class=\"form-control\" id=\"phone\" placeholder=\"Enter your phone number\" required ngModel name=\"contactNumber\" aria-required=\"true\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password:</label>\n            <input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Enter your password\" required ngModel name=\"password\" aria-required=\"true\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"role\">Role:</label>\n            <select class=\"form-control\" id=\"role\" required ngModel name=\"role\" aria-required=\"true\">\n                <option value=\"\">Select your role</option>\n                <option value=\"manager\">Manager</option>\n                <option value=\"user\">User</option>\n            </select>\n        </div>\n        <button type=\"submit\" class=\"btn btn-success mt-3\">Submit</button>\n        <button type=\"button\" class=\"btn btn-success  mt-3\">Cancel</button>\n    </div>\n    </form>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { JwtClientService } from '../jwt-client.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit{\n  public message:any;\n  success=false;\n  error=false;\n\n  constructor(private service:JwtClientService){\n    \n  }\n  ngOnInit(): void {\n    this.success=false;\n    this.error=false;\n  }\n\n  onSubmit(data:any){\n    this.success=false;\n    this.error=false;\n      console.log(data.value.newUser)\n      const resp=this.service.signup(data.value.newUser);\n      resp.subscribe((data:any)=>{ \n        this.success=true;\n        this.message=JSON.parse(data);\n      },(error)=>{\n        this.error=true;\n        this.message=JSON.parse(error.error);\n      },()=>{\n        this.success=false;\n        this.error=false;\n        this.ngOnInit();\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}